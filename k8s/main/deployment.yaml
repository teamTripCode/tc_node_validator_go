apiVersion: apps/v1
kind: Deployment
metadata:
  name: dpos-main
  namespace: dpos-network
  labels:
    app: dpos-main
    component: validator
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: dpos-main
  template:
    metadata:
      labels:
        app: dpos-main
        component: validator
    spec:
      serviceAccountName: dpos-sa
      containers:
      - name: dpos-node
        image: dpos-node:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 3001
          name: http
          protocol: TCP
        env:
        - name: NODE_ID
          value: "main"
        - name: PORT
          value: "3001"
        - name: NETWORK
          valueFrom:
            configMapKeyRef:
              name: dpos-config
              key: network
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: dpos-config
              key: log_level
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: data-volume
          mountPath: /data
      volumes:
      - name: data-volume
        emptyDir: {}